{"version":3,"sources":["webpack:///./src/pages/data/index.tsx","webpack:///./src/pages/data/index.tsx?42e1"],"names":["Data","connect","asyncData","state","getAsyncData","dispatch","type","initAsyncData","isArray","item","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAMA;AACA;AACA;AACA;AACA;IAiCMA,I,WAjBLC,mEAAO,CACN,iBAAK;AAAA,SAAK;AACRC,aAAS,EAAEC,KAAK,CAALA,KAAWD;AADd,GAAL;AADC,GAIN,oBAAQ;AAAA,SAAK;AACXE,gBADW,0BACU;AACnBC,cAAQ,CAAC;AACPC,YAAI,EAAE;AADC,OAAD,CAARD;AAFS;AAMXE,iBANW,2BAMW;AACpBF,cAAQ,CAAC;AACPC,YAAI,EAAE;AADC,OAAD,CAARD;AAGD;AAVU,GAAL;AAJF,E;;;;;;;;;;;;;6BAkBG;AAAA,UACCH,SADD,GACe,KADf,KACe,CADf;AAEP,0BACE;AAAM,iBAAS,EAAC;AAAhB,sBACE,0GACE;AADF;AAEE,aAAK,EAFP;AAGE,aAAK,EAHP;AAIE,aAAK,EAAC;AAJR,sBAME;AACE,YAAI,EADN;AAEE,cAAM,EAFR;AAGE,YAAI,EAHN;AAIE,eAAO,EAAE,WAAWE;AAJtB,SANF,0BAME,CANF,eAcE;AACE,YAAI,EADN;AAEE,cAAM,EAFR;AAGE,YAAI,EAHN;AAIE,gBAAQ,EAAE,EAAEF,SAAS,CAATA,SAJd,CAIY,CAJZ;AAKE,eAAO,EAAE,WAAWK;AALtB,SAdF,0BAcE,CAdF,EAyBG,CAAC,CAAD,aAAeC,qDAAO,CAAtB,SAAsB,CAAtB,IAAqCN,SAAS,CAATA,SAArC,iBACC,iHACG,SAAS,CAAT,IAAc,gBAAI;AAAA,4BACjB;AACE,aAAG,EAAEO,IAAI,CADX;AAEE,eAAK,EAAEA,IAAI,CAFb;AAGE,cAAI,EAAEA,IAAI,CAHZ;AAIE,eAAK,EAAC;AAJR,UADiB;AAFtB,OAEI,CADH,CADD,gBAYC,0HAvCR,oBAuCQ,CArCJ,CADF,CADF;AA4CD;;;;EA/CgBC,+C;AAkDnB,+D;;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAkD;AACqH;AACvK,gBAAgB,wEAAgB,CAAC,yKAAS","file":"pages/data/index.js","sourcesContent":["/*\n * @Author: yanxiaodi\n * @Date: 2020-09-14 19:44:38\n * @Last Modified by: yanxiaodi\n * @Last Modified time: 2020-09-17 18:12:39\n */\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { View, Text } from '@tarojs/components'\nimport { AtButton, AtList, AtListItem, AtCard } from 'taro-ui'\nimport isArray from 'lodash/isArray'\n\ntype PageStateProps = {\n  dispatch: Function\n  asyncData: any\n}\ntype PageDispatchProps = {\n  getAsyncData: () => void\n  initAsyncData: () => void\n}\ntype IProps = PageStateProps & PageDispatchProps\n\ninterface Data {\n  props: IProps\n}\n\n@connect(\n  state => ({\n    asyncData: state.data.asyncData,\n  }),\n  dispatch => ({\n    getAsyncData(): void {\n      dispatch({\n        type: 'data/fetch',\n      })\n    },\n    initAsyncData(): void {\n      dispatch({\n        type: 'data/init',\n      })\n    },\n  })\n)\nclass Data extends Component {\n  render() {\n    const { asyncData } = this.props\n    return (\n      <View className=\"data\">\n        <AtCard\n          // note=\"小Tips\"\n          extra=\"dva/request\"\n          title=\"请求远程数据\"\n          thumb=\"http://www.logoquan.com/upload/list/20180421/logoquan15259400209.PNG\"\n        >\n          <AtButton\n            size=\"small\"\n            circle={true}\n            type=\"secondary\"\n            onClick={this.props.getAsyncData}\n          >\n            异步请求\n          </AtButton>\n          <AtButton\n            size=\"small\"\n            circle={true}\n            type=\"primary\"\n            disabled={!(asyncData.length > 0)}\n            onClick={this.props.initAsyncData}\n          >\n            清空数据\n          </AtButton>\n\n          {/* 数据列表 */}\n          {!!asyncData && isArray(asyncData) && asyncData.length > 0 ? (\n            <AtList>\n              {asyncData.map(item => (\n                <AtListItem\n                  key={item.id}\n                  title={item.name}\n                  note={item.email}\n                  arrow=\"right\"\n                />\n              ))}\n            </AtList>\n          ) : (\n            <Text>无数据</Text>\n          )}\n        </AtCard>\n      </View>\n    )\n  }\n}\n\nexport default Data\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!../../../node_modules/linaria/loader.js??ref--10-1!./index.tsx\"\nvar inst = Page(createPageConfig(component, 'pages/data/index'))\n\n"],"sourceRoot":""}